@{
    ViewData["Title"] = "Enumeration Page";
}
    <div class="text-center" >
        <h1 class="header">Алгоритм часткового перебору</h1>
            <div id="chartContainer"></div>
            <div class="table-container">
                <div class="result">
                    <h2>Результат виконання алгоритму</h2>
                    <p>Загальна сума оціночних вартостей магазинів, які отримав перший бізнесмен: <b>@ViewBag.Enumeration.FirstSum</b></p>
                    <p>Загальна сума оціночних вартостей магазинів, які отримав другий бізнесмен: <b>@ViewBag.Enumeration.SecondSum</b></p>
                    <p>Модуль різниці: <b>@ViewBag.Enumeration.Result</b></p>
                </div>
                <table>
                    <tr>
                        <th>Cords</th>
                        <th>Cost</th>
                    </tr>
                    @foreach(var shop in ViewBag.Shops)
                    {
                        <tr>
                            <td>@shop.Cords.X; @shop.Cords.Y</td>
                            <td>@shop.Cost</td>
                        </tr>
                    }
                </table>
            </div>
    </div>

<script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<script type="text/javascript">
    var chart = new CanvasJS.Chart("chartContainer", {
        width: 400,
        heigth: 700,
        theme: "light2",
        title: {
            text: "Карта міста"
        },
        axisX: {
            title:"x",
            minimum: 0,
            maximum: 20
        },
        axisY:{
            title: "y",
            minimum: 0,
            maximum: 20
        },
        data: []
        });
 
    var data = JSON.parse('@Html.Raw(ViewBag.Models)');
    data.forEach(function (shops) {
        chart.options.data.push(Object.assign({}, {
            type: shops.Type,
            name: shops.Name,
            markerSize: shops.MarkerSize,
            showInLegend: true,
            legendText: shops.LegendText,
            color: shops.Color,
            markerType: shops.MarkerType,
            dataPoints: shops.Points.map(p => Object.assign({}, {x: p.X, y: p.Y}))
        }));
    })
    chart.render(); 
</script>
